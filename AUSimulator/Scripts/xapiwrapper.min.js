
if(!Date.prototype.toISOString){(function(){function pad(number){var r=String(number);if(r.length===1){r='0'+r;}
return r;}
Date.prototype.toISOString=function(){return this.getUTCFullYear()
+'-'+pad(this.getUTCMonth()+1)
+'-'+pad(this.getUTCDate())
+'T'+pad(this.getUTCHours())
+':'+pad(this.getUTCMinutes())
+':'+pad(this.getUTCSeconds())
+'.'+String((this.getUTCMilliseconds()/1000).toFixed(3)).slice(2,5)
+'Z';};}());}
function toBase64(text){if(CryptoJS&&CryptoJS.enc.Base64)
return CryptoJS.enc.Base64.stringify(CryptoJS.enc.Latin1.parse(text));else
return Base64.encode(text);}
function toSHA1(text){if(CryptoJS&&CryptoJS.SHA1)
return CryptoJS.SHA1(text).toString();else
return Crypto.util.bytesToHex(Crypto.SHA1(text,{asBytes:true}));}
function isDate(date){if(Object.prototype.toString.call(date)==="[object Date]")
var d=date;else
var d=new Date(date);if(Object.prototype.toString.call(d)==="[object Date]")
{if(isNaN(d.valueOf()))
{ADL.XAPIWrapper.log("Invalid date String passed");return null;}else{return d;}}else{ADL.XAPIWrapper.log("Invalid date object");return null;}}
(function(ADL){log.debug=false;var Config=function()
{var conf={};conf['endpoint']="http://localhost:8000/xapi/";try
{conf['auth']="Basic "+toBase64('tom:1234');}
catch(e)
{log("Exception in Config trying to encode auth: "+e);}
return conf}();XAPIWrapper=function(config,verifyxapiversion)
{this.lrs=getLRSObject(config||{});if(this.lrs.user&&this.lrs.password)
updateAuth(this.lrs,this.lrs.user,this.lrs.password);this.base=getbase(this.lrs.endpoint);function getbase(url)
{var l=document.createElement("a");l.href=url;if(l.protocol&&l.host)
return l.protocol+"//"+l.host;else
ADL.XAPIWrapper.log("Couldn't create base url from endpoint: "+this.lrs.endpoint);}
function updateAuth(obj,username,password){obj.auth="Basic "+toBase64(username+":"+password);}
if(verifyxapiversion&&testConfig.call(this))
{window.ADL.XHR_request(this.lrs,this.lrs.endpoint+"about","GET",null,null,function(r){if(r.status==200)
{try
{var lrsabout=JSON.parse(r.response);var versionOK=false;for(var idx in lrsabout.version)
{if(lrsabout.version[idx]==ADL.XAPIWrapper.xapiVersion)
{versionOK=true;break;}}
if(!versionOK)
{ADL.XAPIWrapper.log("The lrs version ["+lrsabout.version+"]"+" does not match this wrapper's XAPI version ["+ADL.XAPIWrapper.xapiVersion+"]");}}
catch(e)
{ADL.XAPIWrapper.log("The response was not an about object")}}
else
{ADL.XAPIWrapper.log("The request to get information about the LRS failed: "+r);}});}
this.searchParams=function(){var sp={"format":"exact"};return sp;};this.hash=function(tohash){if(!tohash)return null;try
{return toSHA1(tohash);}
catch(e)
{ADL.XAPIWrapper.log("Error trying to hash -- "+e);return null;}};this.changeConfig=function(config){try
{ADL.XAPIWrapper.log("updating lrs object with new configuration");this.lrs=mergeRecursive(this.lrs,config);if(config.user&&config.password)
this.updateAuth(this.lrs,config.user,config.password);this.base=getbase(this.lrs.endpoint);}
catch(e)
{ADL.XAPIWrapper.log("error while changing configuration -- "+e);}};this.updateAuth=updateAuth;};XAPIWrapper.prototype.xapiVersion="1.0.0";XAPIWrapper.prototype.prepareStatement=function(stmt)
{if(stmt.actor===undefined){stmt.actor=JSON.parse(this.lrs.actor);}
else if(typeof stmt.actor==="string"){stmt.actor=JSON.parse(stmt.actor);}
if(this.lrs.grouping||this.lrs.registration||this.lrs.activity_platform){if(!stmt.context){stmt.context={};}}
if(this.lrs.grouping){if(!stmt.context.contextActivities){stmt.context.contextActivities={};}
stmt.context.contextActivities.grouping=[{id:this.lrs.grouping}];}
if(this.lrs.registration){stmt.context.registration=this.lrs.registration;}
if(this.lrs.activity_platform){stmt.context.platform=this.lrs.activity_platform;}};XAPIWrapper.prototype.testConfig=testConfig;XAPIWrapper.prototype.log=log;XAPIWrapper.prototype.sendStatement=function(stmt,callback)
{if(this.testConfig())
{this.prepareStatement(stmt);var id;if(stmt['id'])
{id=stmt['id'];}
else
{id=ADL.ruuid();stmt['id']=id;}
var resp=ADL.XHR_request(this.lrs,this.lrs.endpoint+"statements","POST",JSON.stringify(stmt),this.lrs.auth,callback,{"id":id});if(!callback)
return{"xhr":resp,"id":id};}};XAPIWrapper.prototype.sendStatements=function(stmtArray,callback)
{if(this.testConfig())
{for(var i in stmtArray)
{this.prepareStatement(stmtArray[i]);}
var resp=ADL.XHR_request(this.lrs,this.lrs.endpoint+"statements","POST",JSON.stringify(stmtArray),this.lrs.auth,callback);if(!callback)
{return resp;}}};XAPIWrapper.prototype.getStatements=function(searchparams,more,callback)
{if(this.testConfig())
{var url=this.lrs.endpoint+"statements";if(more)
{url=this.base+more;}
else
{var urlparams=new Array();for(s in searchparams)
{if(s=="until"||s=="since"){var d=new Date(searchparams[s]);urlparams.push(s+"="+encodeURIComponent(d.toISOString()));}else{urlparams.push(s+"="+encodeURIComponent(searchparams[s]));}}
if(urlparams.length>0)
url=url+"?"+urlparams.join("&");}
var res=ADL.XHR_request(this.lrs,url,"GET",null,this.lrs.auth,callback);if(res===undefined||res.status==404)
{return null}
try
{return JSON.parse(res.response);}
catch(e)
{return res.response;}}};XAPIWrapper.prototype.getActivities=function(activityid,callback)
{if(this.testConfig())
{var url=this.lrs.endpoint+"activities?activityId=<activityid>";url=url.replace('<activityid>',encodeURIComponent(activityid));var result=ADL.XHR_request(this.lrs,url,"GET",null,this.lrs.auth,callback,null,true);if(result===undefined||result.status==404)
{return null}
try
{return JSON.parse(result.response);}
catch(e)
{return result.response;}}};XAPIWrapper.prototype.sendState=function(activityid,agent,stateid,registration,stateval,matchHash,noneMatchHash,callback)
{if(this.testConfig())
{var url=this.lrs.endpoint+"activities/state?activityId=<activity ID>&agent=<agent>&stateId=<stateid>";url=url.replace('<activity ID>',encodeURIComponent(activityid));url=url.replace('<agent>',encodeURIComponent(JSON.stringify(agent)));url=url.replace('<stateid>',encodeURIComponent(stateid));if(registration)
{url+="&registration="+encodeURIComponent(registration);}
var headers=null;if(matchHash&&noneMatchHash)
{log("Can't have both If-Match and If-None-Match");}
else if(matchHash)
{headers={"If-Match":'"'+matchHash+'"'};}
else if(noneMatchHash)
{headers={"If-None-Match":'"'+noneMatchHash+'"'};}
var method="PUT";if(stateval)
{if(stateval instanceof Array)
{stateval=JSON.stringify(stateval);headers=headers||{};headers["Content-Type"]="application/json";}
else if(stateval instanceof Object)
{stateval=JSON.stringify(stateval);headers=headers||{};headers["Content-Type"]="application/json";method="POST";}
else
{headers=headers||{};headers["Content-Type"]="application/octet-stream";}}
else
{this.log("No activity state was included.");return false;}
ADL.XHR_request(this.lrs,url,method,stateval,this.lrs.auth,callback,null,null,headers);}};XAPIWrapper.prototype.getState=function(activityid,agent,stateid,registration,since,callback)
{if(this.testConfig())
{var url=this.lrs.endpoint+"activities/state?activityId=<activity ID>&agent=<agent>";url=url.replace('<activity ID>',encodeURIComponent(activityid));url=url.replace('<agent>',encodeURIComponent(JSON.stringify(agent)));if(stateid)
{url+="&stateId="+encodeURIComponent(stateid);}
if(registration)
{url+="&registration="+encodeURIComponent(registration);}
if(since)
{since=isDate(since);if(since!=null){url+='&since='+encodeURIComponent(since.toISOString());}}
var result=ADL.XHR_request(this.lrs,url,"GET",null,this.lrs.auth,callback,null,true);if(result===undefined||result.status==404)
{return null}
try
{return JSON.parse(result.response);}
catch(e)
{return result.response;}}};XAPIWrapper.prototype.deleteState=function(activityid,agent,stateid,registration,matchHash,noneMatchHash,callback)
{if(this.testConfig())
{var url=this.lrs.endpoint+"activities/state?activityId=<activity ID>&agent=<agent>&stateId=<stateid>";url=url.replace('<activity ID>',encodeURIComponent(activityid));url=url.replace('<agent>',encodeURIComponent(JSON.stringify(agent)));url=url.replace('<stateid>',encodeURIComponent(stateid));if(registration)
{url+="&registration="+encodeURIComponent(registration);}
var headers=null;if(matchHash&&noneMatchHash)
{log("Can't have both If-Match and If-None-Match");}
else if(matchHash)
{headers={"If-Match":'"'+matchHash+'"'};}
else if(noneMatchHash)
{headers={"If-None-Match":'"'+noneMatchHash+'"'};}
var result=ADL.XHR_request(this.lrs,url,"DELETE",null,this.lrs.auth,callback,null,headers);if(result===undefined||result.status==404)
{return null}
try
{return JSON.parse(result.response);}
catch(e)
{return result;}}};XAPIWrapper.prototype.sendActivityProfile=function(activityid,profileid,profileval,matchHash,noneMatchHash,callback)
{if(this.testConfig())
{var url=this.lrs.endpoint+"activities/profile?activityId=<activity ID>&profileId=<profileid>";url=url.replace('<activity ID>',encodeURIComponent(activityid));url=url.replace('<profileid>',encodeURIComponent(profileid));var headers=null;if(matchHash&&noneMatchHash)
{log("Can't have both If-Match and If-None-Match");}
else if(matchHash)
{headers={"If-Match":'"'+matchHash+'"'};}
else if(noneMatchHash)
{headers={"If-None-Match":'"'+noneMatchHash+'"'};}
var method="PUT";if(profileval)
{if(profileval instanceof Array)
{profileval=JSON.stringify(profileval);headers=headers||{};headers["Content-Type"]="application/json";}
else if(profileval instanceof Object)
{profileval=JSON.stringify(profileval);headers=headers||{};headers["Content-Type"]="application/json";method="POST";}
else
{headers=headers||{};headers["Content-Type"]="application/octet-stream";}}
else
{this.log("No activity profile was included.");return false;}
ADL.XHR_request(this.lrs,url,method,profileval,this.lrs.auth,callback,null,false,headers);}};XAPIWrapper.prototype.getActivityProfile=function(activityid,profileid,since,callback)
{if(this.testConfig())
{var url=this.lrs.endpoint+"activities/profile?activityId=<activity ID>";url=url.replace('<activity ID>',encodeURIComponent(activityid));if(profileid)
{url+="&profileId="+encodeURIComponent(profileid);}
if(since)
{since=isDate(since);if(since!=null){url+='&since='+encodeURIComponent(since.toISOString());}}
var result=ADL.XHR_request(this.lrs,url,"GET",null,this.lrs.auth,callback,null,true);if(result===undefined||result.status==404)
{return null}
try
{return JSON.parse(result.response);}
catch(e)
{return result.response;}}};XAPIWrapper.prototype.deleteActivityProfile=function(activityid,profileid,matchHash,noneMatchHash,callback)
{if(this.testConfig())
{var url=this.lrs.endpoint+"activities/profile?activityId=<activity ID>&profileId=<profileid>";url=url.replace('<activity ID>',encodeURIComponent(activityid));url=url.replace('<profileid>',encodeURIComponent(profileid));var headers=null;if(matchHash&&noneMatchHash)
{log("Can't have both If-Match and If-None-Match");}
else if(matchHash)
{headers={"If-Match":'"'+matchHash+'"'};}
else if(noneMatchHash)
{headers={"If-None-Match":'"'+noneMatchHash+'"'};}
var result=ADL.XHR_request(this.lrs,url,"DELETE",null,this.lrs.auth,callback,null,headers);if(result===undefined||result.status==404)
{return null}
try
{return JSON.parse(result.response);}
catch(e)
{return result;}}};XAPIWrapper.prototype.getAgents=function(agent,callback)
{if(this.testConfig())
{var url=this.lrs.endpoint+"agents?agent=<agent>";url=url.replace('<agent>',encodeURIComponent(JSON.stringify(agent)));var result=ADL.XHR_request(this.lrs,url,"GET",null,this.lrs.auth,callback,null,true);if(result===undefined||result.status==404)
{return null}
try
{return JSON.parse(result.response);}
catch(e)
{return result.response;}}};XAPIWrapper.prototype.sendAgentProfile=function(agent,profileid,profileval,matchHash,noneMatchHash,callback)
{if(this.testConfig())
{var url=this.lrs.endpoint+"agents/profile?agent=<agent>&profileId=<profileid>";url=url.replace('<agent>',encodeURIComponent(JSON.stringify(agent)));url=url.replace('<profileid>',encodeURIComponent(profileid));var headers=null;if(matchHash&&noneMatchHash)
{log("Can't have both If-Match and If-None-Match");}
else if(matchHash)
{headers={"If-Match":'"'+matchHash+'"'};}
else if(noneMatchHash)
{headers={"If-None-Match":'"'+noneMatchHash+'"'};}
var method="PUT";if(profileval)
{if(profileval instanceof Array)
{profileval=JSON.stringify(profileval);headers=headers||{};headers["Content-Type"]="application/json";}
else if(profileval instanceof Object)
{profileval=JSON.stringify(profileval);headers=headers||{};headers["Content-Type"]="application/json";method="POST";}
else
{headers=headers||{};headers["Content-Type"]="application/octet-stream";}}
else
{this.log("No agent profile was included.");return false;}
ADL.XHR_request(this.lrs,url,method,profileval,this.lrs.auth,callback,null,false,headers);}};XAPIWrapper.prototype.getAgentProfile=function(agent,profileid,since,callback)
{if(this.testConfig()){var url=this.lrs.endpoint+"agents/profile?agent=<agent>";url=url.replace('<agent>',encodeURIComponent(JSON.stringify(agent)));url=url.replace('<profileid>',encodeURIComponent(profileid));if(profileid)
{url+="&profileId="+encodeURIComponent(profileid);}
if(since)
{since=isDate(since);if(since!=null){url+='&since='+encodeURIComponent(since.toISOString());}}
var result=ADL.XHR_request(this.lrs,url,"GET",null,this.lrs.auth,callback,null,true);if(result===undefined||result.status==404)
{return null}
try
{return JSON.parse(result.response);}
catch(e)
{return result.response;}}};XAPIWrapper.prototype.deleteAgentProfile=function(agent,profileid,matchHash,noneMatchHash,callback)
{if(this.testConfig())
{var url=this.lrs.endpoint+"agents/profile?agent=<agent>&profileId=<profileid>";url=url.replace('<agent>',encodeURIComponent(JSON.stringify(agent)));url=url.replace('<profileid>',encodeURIComponent(profileid));var headers=null;if(matchHash&&noneMatchHash)
{log("Can't have both If-Match and If-None-Match");}
else if(matchHash)
{headers={"If-Match":'"'+matchHash+'"'};}
else if(noneMatchHash)
{headers={"If-None-Match":'"'+noneMatchHash+'"'};}
var result=ADL.XHR_request(this.lrs,url,"DELETE",null,this.lrs.auth,callback,null,headers);if(result===undefined||result.status==404)
{return null}
try
{return JSON.parse(result.response);}
catch(e)
{return result;}}};function testConfig()
{try
{return this.lrs.endpoint!=undefined&&this.lrs.endpoint!="";}
catch(e)
{return false}}
function log(message)
{if(!log.debug)return false;try
{console.log(message);return true;}
catch(e){return false;}}
function mergeRecursive(obj1,obj2)
{for(var p in obj2)
{prop=obj2[p];log(p+" : "+prop);try
{if(obj2[p].constructor==Object)
{obj1[p]=mergeRecursive(obj1[p],obj2[p]);}
else
{if(obj1==undefined)
{obj1=new Object();}
obj1[p]=obj2[p];}}
catch(e)
{if(obj1==undefined)
{obj1=new Object();}
obj1[p]=obj2[p];}}
return obj1;}
function getLRSObject(config)
{var lrsProps=["endpoint","auth","actor","registration","activity_id","grouping","activity_platform"];var lrs=new Object();var qsVars,prop;qsVars=parseQueryString();if(qsVars!==undefined&&Object.keys(qsVars).length!==0){for(var i=0;i<lrsProps.length;i++){prop=lrsProps[i];if(qsVars[prop]){lrs[prop]=qsVars[prop];delete qsVars[prop];}}
if(Object.keys(qsVars).length!==0){lrs.extended=qsVars;}
lrs=mergeRecursive(config,lrs);}
else{lrs=config;}
return lrs;}
function parseQueryString()
{var loc,qs,pairs,pair,ii,parsed;loc=window.location.href.split('?');if(loc.length===2){qs=loc[1];pairs=qs.split('&');parsed={};for(ii=0;ii<pairs.length;ii++){pair=pairs[ii].split('=');if(pair.length===2&&pair[0]){parsed[pair[0]]=decodeURIComponent(pair[1]);}}}
return parsed;}
function delay()
{var xhr=new XMLHttpRequest();var url=window.location+'?forcenocache='+ADL.ruuid();xhr.open('GET',url,false);xhr.send(null);}
function ie_request(method,url,headers,data)
{var newUrl=url;var formData=new Array();var qsIndex=newUrl.indexOf('?');if(qsIndex>0){formData.push(newUrl.substr(qsIndex+1));newUrl=newUrl.substr(0,qsIndex);}
newUrl=newUrl+'?method='+method;if(headers!==null){for(var headerName in headers){formData.push(headerName+"="+encodeURIComponent(headers[headerName]));}}
if(data!==null){formData.push('content='+encodeURIComponent(data));}
return{"method":"POST","url":newUrl,"headers":{},"data":formData.join("&")};}
ADL.ruuid=function()
{return'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:(r&0x3|0x8);return v.toString(16);});};ADL.dateFromISOString=function(isostr)
{var regexp="([0-9]{4})(-([0-9]{2})(-([0-9]{2})"+"([T| ]([0-9]{2}):([0-9]{2})(:([0-9]{2})(\.([0-9]+))?)?"+"(Z|(([-+])([0-9]{2}):([0-9]{2})))?)?)?)?";var d=isostr.match(new RegExp(regexp));var offset=0;var date=new Date(d[1],0,1);if(d[3]){date.setMonth(d[3]-1);}
if(d[5]){date.setDate(d[5]);}
if(d[7]){date.setHours(d[7]);}
if(d[8]){date.setMinutes(d[8]);}
if(d[10]){date.setSeconds(d[10]);}
if(d[12]){date.setMilliseconds(Number("0."+d[12])*1000);}
if(d[14]){offset=(Number(d[16])*60)+Number(d[17]);offset*=((d[15]=='-')?1:-1);}
offset-=date.getTimezoneOffset();time=(Number(date)+(offset*60*1000));var dateToReturn=new Date();dateToReturn.setTime(Number(time));return dateToReturn;};ADL.XHR_request=function(lrs,url,method,data,auth,callback,callbackargs,ignore404,extraHeaders)
{"use strict";var xhr,finished=false,xDomainRequest=false,ieXDomain=false,ieModeRequest,urlparts=url.toLowerCase().match(/^(.+):\/\/([^:\/]*):?(\d+)?(\/.*)?$/),location=window.location,urlPort,result,extended,prop,until;var headers={};headers["Content-Type"]="application/json";headers["Authorization"]=auth;headers['X-Experience-API-Version']=ADL.XAPIWrapper.xapiVersion;if(extraHeaders!==null){for(var headerName in extraHeaders){headers[headerName]=extraHeaders[headerName];}}
xDomainRequest=(location.protocol.toLowerCase()!==urlparts[1]||location.hostname.toLowerCase()!==urlparts[2]);if(!xDomainRequest){urlPort=(urlparts[3]===null?(urlparts[1]==='http'?'80':'443'):urlparts[3]);xDomainRequest=(urlPort===location.port);}
if(!xDomainRequest||typeof(XDomainRequest)==='undefined'){xhr=new XMLHttpRequest();xhr.open(method,url,callback!=null);for(var headerName in headers){xhr.setRequestHeader(headerName,headers[headerName]);}}
else{ieXDomain=true;ieModeRequest=ie_request(method,url,headers,data);xhr=new XDomainRequest();xhr.open(ieModeRequest.method,ieModeRequest.url);}
function requestComplete(){if(!finished){finished=true;var notFoundOk=(ignore404&&xhr.status===404);if(xhr.status===undefined||(xhr.status>=200&&xhr.status<400)||notFoundOk){if(callback){if(callbackargs){callback(xhr,callbackargs);}
else{try{var body=JSON.parse(xhr.responseText);callback(xhr,body);}
catch(e){callback(xhr,xhr.responseText);}}}else{result=xhr;return xhr;}}else{var warning;try{warning="There was a problem communicating with the Learning Record Store. ( "
+xhr.status+" | "+xhr.response+" )"+url}catch(ex){warning=ex.toString();}
ADL.XAPIWrapper.log(warning);ADL.xhrRequestOnError(xhr,method,url,callback,callbackargs);result=xhr;return xhr;}}else{return result;}};xhr.onreadystatechange=function(){if(xhr.readyState===4){return requestComplete();}};xhr.onload=requestComplete;xhr.onerror=requestComplete;xhr.send(ieXDomain?ieModeRequest.data:data);if(!callback){if(ieXDomain){until=1000+new Date();while(new Date()<until&&xhr.readyState!==4&&!finished){delay();}}
return requestComplete();}};ADL.xhrRequestOnError=function(xhr,method,url,callback,callbackargs){};ADL.XAPIWrapper=new XAPIWrapper(Config,false);}(window.ADL=window.ADL||{}));